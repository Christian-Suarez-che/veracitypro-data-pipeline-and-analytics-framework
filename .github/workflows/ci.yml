name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Ruff check
        run: ruff check .

  dbt-compile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: dbt/veracitypro_dbt   # where dbt_project.yml lives
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dbt (Snowflake adapter)
        run: |
          python -m pip install --upgrade pip
          # Pin to the current major to avoid surprises
          pip install "dbt-snowflake~=1.10"

      - name: Install dbt packages (dbt deps)
        run: dbt deps

      - name: Create temporary profiles.yml (compile-only)
        run: |
          mkdir -p "$GITHUB_WORKSPACE/.ci"
          cat > "$GITHUB_WORKSPACE/.ci/profiles.yml" <<'EOF'
          config:
            send_anonymous_usage_stats: false
          user:
            target: ci
            outputs:
              ci:
                type: snowflake
                account: dummy
                user: dummy
                password: x
                role: DUMMY
                database: DUMMY
                warehouse: DUMMY
                schema: CI
                threads: 1
          EOF

      - name: dbt compile
        env:
          DBT_PROFILES_DIR: ${{ github.workspace }}/.ci
        run: dbt compile

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest fastjsonschema requests
      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}" >> "$GITHUB_ENV"
      - name: Unit tests
        run: pytest -q
