name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Ruff check
        run: ruff check .

  # Keep the same job id so existing required check names still match
  dbt-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dbt (core + Snowflake)
        run: |
          python -m pip install --upgrade pip
          pip install "dbt-core" "dbt-snowflake"

      - name: Prepare dummy profile (absolute path)
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dbt"
          cat > "$GITHUB_WORKSPACE/dbt/profiles.yml" <<'EOF'
          veracitypro_dbt:
            target: ci
            outputs:
              ci:
                type: snowflake
                account: dummy
                user: dummy
                password: dummy
                role: DUMMY
                database: VP_DWH
                warehouse: WH_INGEST_XS
                schema: RAW
                threads: 1
          EOF

      - name: dbt deps
        working-directory: dbt/veracitypro_dbt
        run: dbt deps

      # Use parse (no DB connection) to avoid login with dummy creds
      - name: dbt parse (no database connection)
        env:
          DBT_PROFILES_DIR: ${{ github.workspace }}/dbt
        working-directory: dbt/veracitypro_dbt
        run: dbt parse

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest fastjsonschema requests
      - name: Add repo to PYTHONPATH
        run: echo "PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}" >> "$GITHUB_ENV"
      - name: Unit tests
        run: pytest -q
